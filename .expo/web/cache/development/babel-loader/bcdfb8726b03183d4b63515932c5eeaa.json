{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport styles from \"../style/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function RadioButton(_ref) {\n  var genders = _ref.genders,\n      onPress = _ref.onPress;\n\n  var _useState = useState('male'),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  function handlePress(selected) {\n    setValue(selected);\n    onPress(selected);\n  }\n\n  return _jsx(_Fragment, {\n    children: genders.map(function (item) {\n      return _jsxs(View, {\n        style: styles.radioButtonContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: item.label\n        }), _jsx(Pressable, {\n          style: styles.radioButton,\n          onPress: function onPress() {\n            return handlePress(item.value);\n          },\n          children: value === item.value && _jsx(View, {\n            style: styles.radioButtonIcon\n          })\n        })]\n      }, item.value);\n    })\n  });\n}","map":{"version":3,"sources":["/Users/vivien/Documents/AlcometerAssignment/components/RadioButton.js"],"names":["React","useState","styles","RadioButton","genders","onPress","value","setValue","handlePress","selected","map","item","radioButtonContainer","label","radioButton","radioButtonIcon"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAEA,OAAOC,MAAP;;;;AAOA,eAAe,SAASC,WAAT,OAAyC;AAAA,MAAnBC,OAAmB,QAAnBA,OAAmB;AAAA,MAAVC,OAAU,QAAVA,OAAU;;AACtD,kBAA0BJ,QAAQ,CAAC,MAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AAMA,WAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7BF,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACAJ,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD;;AAED,SACE;AAAA,cACGL,OAAO,CAACM,GAAR,CAAY,UAACC,IAAD;AAAA,aACX,MAAC,IAAD;AAAuB,QAAA,KAAK,EAAET,MAAM,CAACU,oBAArC;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,MAAM,CAACW,KAApB;AAAA,oBAA4BF,IAAI,CAACE;AAAjC,UADF,EAEE,KAAC,SAAD;AAAW,UAAA,KAAK,EAAEX,MAAM,CAACY,WAAzB;AAAsC,UAAA,OAAO,EAAE;AAAA,mBAAMN,WAAW,CAACG,IAAI,CAACL,KAAN,CAAjB;AAAA,WAA/C;AAAA,oBACGA,KAAK,KAAKK,IAAI,CAACL,KAAf,IAAwB,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACa;AAApB;AAD3B,UAFF;AAAA,SAAWJ,IAAI,CAACL,KAAhB,CADW;AAAA,KAAZ;AADH,IADF;AAYD","sourcesContent":["import React, {useState} from 'react';\nimport { Text, View, StyleSheet, Pressable } from 'react-native';\nimport styles from '../style/style';\n\n/**\n * @param genders\n * @param onPress\n */\n    \nexport default function RadioButton({genders, onPress}) {\n  const [value, setValue] = useState('male');\n\n  /**\n   * @param selected\n   */\n\n  function handlePress(selected) {\n    setValue(selected);\n    onPress(selected);\n  }\n\n  return(\n    <>\n      {genders.map((item) => (\n        <View key={item.value} style={styles.radioButtonContainer}>\n          <Text style={styles.label}>{item.label}</Text>\n          <Pressable style={styles.radioButton} onPress={() => handlePress(item.value)}>\n            {value === item.value && <View style={styles.radioButtonIcon}/>}\n          </Pressable>\n        </View>\n      ))}\n    </>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}